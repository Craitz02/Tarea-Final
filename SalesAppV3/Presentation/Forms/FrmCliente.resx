<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAeHgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAHeVJ
        REFUeNrtnWuspld1339rP7f3cu5z82UYY7s2GByCHUBEgIiwQYQQlwJqpUqUL82XfGlUCamtoiZf0n6p
        QhW1qhRXaUISqqqgcEmbFiiUS5IGMKEoBGPwpb6M7bl57Jlzzvs+l7364XnOzDvjuZwz55yZd71n/aQj
        Wfb7vn6evdf677X3XnsvcBzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
        cRxn2pDt/sDRF096KzrODeCWQ/u2/RvBm9Fx9i7pDv3OvcDHgAJQb1bH2TUi8FngL6ZJAO4E/kknAI7j
        7C4/3SkB2KkpgAK194vj7DoNbRSwI/gagOPsYVwAHMcFwHEcFwDHcVwAHMdxAXAcxwXAcRwXAMdxXAAc
        x3EBcBzHBcBxHBcAx3FcABzHcQFwHMcFwHEcFwDHcVwAHMeZPrZ/JZgIqEIQduCS4etHjHaeVaT9s4Jq
        +2emfQExNBYGUVbXeezBj3D3Vz57YwVAz5xF8px49Hn0zFkDhqoQEsJth5G54fRfYSqCnn6Z+OxR0MjU
        i6wqsrRAuPXWblAw0L5nzhKffhZiY6F9Qzx56sCRv/8QP9mJ19/Olx978CPkf/cDyE0HP1z9ty/9oZ48
        NTBhoAvz9P7prxJuOwxxyhUgBOr/8x3G/+nTUFXTb6AxkrzlzfT+8cegyKdfYIMQn3ya0b/9D+0AZiCK
        1br6AWX1ECL/D9hWFLDtCKD+y+8Aekc8cWpA00x946EKvQKKwsYF5gI6GqOra1AbuHc1RnR1DY0RQZj6
        Rlag10PLqm1jC1MtkTcg8l7gP273p65ZAB578CNtfx87Pg+8p3swAx4FkmdIlpp4VhCo6la4bBhnK1TT
        HllNPnKWQZpaWmtJgb8H/BfgzHbWAnZi5eMtwNvN9LYqsm+lDU+tUFW2Fi03BMsKRUZYWbL1zPDzne9t
        i+0KQAJ8CFi21HKybwXJczMdrrUth1JLgqWK5Dmyf5+N5z3Pcud7yXUXgI3wH7gd+EVTzdYtApJamQLQ
        jqhmQupuCmBpNM2y1iZsRQB0vnf7RT65+wIwwfuBO6y1mhQ5JEb2fVWhrjBTclGwN2UJAen1rJkxne+9
        f1uvvtUvTCjNEjsQglx3kgQZDjGTtKSKVraqrlmbsiAC/R4Ec4mxG1PwpYt8c/cEYIK3A2+1ZZmKFDly
        cL8dA42xnQJYom5QC1vCE3YRDuy3szV8IW9lG4vw1yoAG9sQC+aaK88Jy0umjLPd/zeWCmwhZ2ECWVlG
        8gyDCrDQ+eI1LWptSQAmQoy7gPeZc36AEJTBoLYUAWhV2WrjGJWyqs1olioyN6xJEnvjf8v7Op/c8jTg
        WiOADwBHjApAlCyzs0K1MZoaCgCo6krL8oylh5Y8qxExtHJ5AUc6n9y6O2z2gxPKso924cHkUWKZG66T
        ZzaeXaTd/rO2CBgbpTQWtmRZKoPB2KgAhM4n913kqzsnABO8E7jPZDOpIkuLa1IUjZW5nqqxKUArWkpZ
        mRpNpSgaWV5cNZgLsMF9nW9uWTm2Qk674DC02kqytBjJUjWz1hPtLah16xaGUhcV8kxladHQ1sWrGHa+
        uaUc900JwERIcQ/wgNkmUkXm5/okiZ3cBTW4DaixO7psiCQJMj9XGI4A6Hzznot8dvsCMMEHgcNmm0dE
        ZTjsI2InDziqwV0ARavK0rIliGQyHA5ALCvA4c5HN81VBWBCSQ4BDxluHEiTWlaW11C1Y5w28wCEug6m
        di5QkZWlMWliLNx6FQ91vrqpKGArEcC7gZ8x2ywKpFkT9i2PTD137MJpS86kKlS1rRRxhbBvZZ0stbwO
        QOej797shzcrAD3aBYa+3XZRJEtFFheCqXletHcWABCaJrOWvSiLC0iaWTwVOEm/89VNnW66ogBMhBD3
        Ar9guVUASNNEeoWtHYymsXWyrnWmoHVj6Lz1huv0BmSWzolfll/ofPaq04DNRgAPATdZbxXp92uyzNS5
        T1OXa0zaVWwMXbnU2UeWD6RXWM0GnOQmNrled1kBmFCOW4FfNt8kqsjy4lmKwk48Ldi7XGPjyataUGMP
        3ssbWVw8Y3wKsMEvd757xShgMxHAe+j2Fq0jS4u15Jna6WAxdhvQebQsS1RNnbmQLI+yvGhsz/Wy3MPG
        Zb1X4JICMKEYQ+DDQGG+ORRkfj4jTU2dYdC66gqCWEJgPK6IxuYuaSKyMJ8avBPgUhSd7w4v8umrC8AE
        P8s15BdPqwLIcDBnKgkIbEYAAjouK3NTgBAyGQ7mLN4Kchne2fnw5V/5yt3Ih4D9M9EUSVLL8mIJaisC
        qCxGAMC4bIjmJtNBFhcbEvPJQBvs73xYNi0AE6HCEeCXZqQhIMvqsH/fmjlxr2rU5hpANPfgqsj+lVVS
        88lAk/xS58uXnAZcaTR8L90tI+ZRRbIUWVzAXHhXG6oKNElZqUZrz62EpaUoWWpoofiq3NX58iW5QAAm
        FGKedgEhm5VWIE0TBoO+Kf8X2ixAe3kAbfqytamLAsNBjyyzlcZ8ZTLazMD5i3z81QIwga1yX5vxpaJA
        8mxg7KnbmgDmRiNB61osbl9Kns2RZ8bCraty2TJilxIAk+W+rkib532GIrc3lFqMANoEpkCM9hypyFUW
        5s/O0BQArlBG7JwAmC73tRmbXF4sJc+jtY5tdwEMGmPTJKaOXcNGncAmLC3ZOjG6OS5ZRuxSEYDJcl9X
        7liQhYWENLU3ItVG1wCamJmMANLuxOjscckyYuEiRVjCYrmvTSiADAdDQrCVBKT2bgQ+9+gxZqitnAsA
        kpDI3HAwY1MAuEwZsYs7yF65r80QQiOL84I1YVNt6+yZVADNTQoAksr8XEoIs3Aq8GJeVUZssoPslvu6
        Gllay7599hZ2osHLNc8/e9DaUoHAjjYZ6CxpOivZgJO8qoxYmIlyX1fr0DRTWV4yaYztFMDgrlSMkaoq
        LZqMLC/XkqXmFow3yQVlxCYjALvlvq5GlgaZG+YWIwC1VhZsg6aJlFVl7tlVkflhRmqketTWuaCM2MZL
        mi73dXUByILk2bypZxa6smBmpwCqVWlSvSQv5sjSGVsIZ9LnP9T5/DmHfwdWy31dDQWZn1ujyI1ZorT3
        aRhdBNS2QrDNQzVFlsjccH12TgW/ivs6nyfQXhxgutzX1RRAlpfWJC/slATfwGJREOjqA0bVylZ9wNZc
        FMmLWpaXVmfoXoCL2SgjVgTgTWzi6iDLJCtzQzJjOQCdMVLbHEQFTaVeM3b2oiMLabJvzvAV+JviPcCb
        0rnB4ANqudzX1XyoacgPHJjPBgNbx9NFoK5JioJmMIBgaHlGFXpZWvR7C6HXg2hJxAQhpunKykLa7yOG
        ykhukcMCH0izPH9bEJnVFU9QJV1cIS167R37lgQgHbdrgb2evfsAiows65PkGURjTpQEwvwySdGDZGZd
        I6jqzwVUb5tZ5wdIU1iax+J8TrWrCmRxKtpEtLR6wa5Av4Awa6eCX2VfdwS67YAZfUMoMmTfkk0nil1p
        cIt2GBVKYzUNJ+1mYQ6yWSgSdEX2BbqbQmaWNEMWF20eqT1XGdiiE0W7WYyALC9BZr5O4NWYDyJiqlTW
        ljsySZCe0QXdujG2gDbBRgRgEVVkeRnJZ+dGvEv6hkgviMjMLnMCMOi16wAmBaAyWRVow4msbmECSL9v
        1242LwBJUGvFG7ZqhCuLYFHJhTaEtto9qjYvMtkgCe3gMcMzANX2vPYsHnvs3hBkZakN5SxerGn1RuCN
        5o+NXQHLMlgyeI381qiDqs7i/WfnFEDm5iE1OpezWRn4PI1RAWjvBkSWl2c9AhgF4JmZfUMRpOjZyqKb
        pKpQy2G0ZQHLMsLiIjMeATwTROSvZ/b10qTdz7XaiaYjgI2aBkYFTAR6hb0MzC29ovx1iKpPz+TbqUKe
        200CYqMqkGJ1L12ryvAahsL8AGaqSNCFRNWnQ4zxEYVXZvINswxZWrT7/FXdjqAW/V+AsjJZ2HTD/2V5
        cWaTgRReiTE+EoDvovriLPq/pAkyGNrswLa6jt08ACYiAJNhtCJLK5Dls+gadD7/3VBW1TFVfWQmXzLP
        WwW3isUCm5OUpd3nV5C5ITKj5wFU9ZGyqo6FflGsq+qXmbV8AFVYXrCZBAR0BTZNRwCUhjMZoc0E7M1k
        BFCr6pf7RbEeYozEGL+qqk/N2lvKylIrAFbncJYzAQFK24lMZCkszs/cGoCqPhVj/GqMkdA0DWfX1p5R
        1T+bsbdEFhcQq0lAYLcuIADSVTa2m8osWdaeCpwxVPXPzq6tPdM0DUFEmJ+ba2KMn1bVY7P0olL07d7o
        Yrgu4Ib/Y3obEMgzZHFppiIAVT0WY/z0/NxcIyKEmz//KZqmYX08fkRVvzgzb5okMBxgdQ+daPdK8HNU
        hs8CAIQEGfRnKhlIVb+4Ph4/0jQNN3/+U21dgBAC/V6vijE+rKrP2X9LWvXeZ/QikLanbF4JPkmM9kfP
        oeEo8tXO/1yM8eF+r1eFLj0+ANR1TVPXPPb449+OMT6M+QRobRf/VpYMO8/GbUCWRx/jR4JVkaWFLhnI
        vv/HGB9+7PHHv93UNXUXXQaAw1/8I0II3H3nnRpj/F1V/Zb1t5U0RYaGV3C1qwxs2v8VNVgg+AI7Wl5u
        80mMK4CqfivG+Lt333mnhhA4/MU/Oi8AADd97g9YG43Isuz5pml+U1WP2n1bIBUkC9j1IAEJpu1OtYF6
        ze4cWkEWhkhuewqgqkebpvmNLMueXxuNuOlzf3Duv13wZnmWMR6POXjvvV+NMf5rYN3kG6eQ33OctPom
        xMqgCAiEMdndp5G5aFMERMhvP0Ve/0+oV232QazImm+R33PSctnc9Rjjbx28666vjcdj8osyYy846vTb
        P/4Bn7jnPs4eO0Zd138TROZCCG/D2OvnbxozfOc6SXwSTVfQ3mttGZ5WpCe/QC/530jeUD2dQSN2fEgh
        vatk+OA6afIsSkIc3A3Grp9MTn+D/KXPkh1cp1kV4ovm0oLrJsbfKev6k2unTtVBhFs+/6nLCwDAv3n0
        //KJe+4jiFR1jH8lIoeCyP1WDC97w5jhg2NCHySWJKMniNlBtLjViPPXJC99lfzk5xAdkxxsI4D6+dSG
        CCgkRyrm3jciWVLQSBg9hYa5VohNFKESwivfoTj+x0hzBsmE7NaG5hUhHk+tCLHGGH+vqutfT5NkNYhc
        EPpfVgBaEfg+n7jnPkRkHJvmzxHZF0R+limPBLJ7xgzfOyLMaRc2CxLXSdZ/TExX0N5hprf3BLQkOfUl
        8hP/FYnr7fMnkN7cQKKtCNRTLAIK6e0Vw/evk+6P5/tAK5L1x1DJ0f5rpzgSaBs2vPwXFMc+hdQvnft3
        kkN2uBOBE1MfCdQxxt+r6/qfhRBOC3DoT37/kh+8bE/82l33kiYJiKzXTfN1gUJCuE9gunJrFUiV/M1j
        hg+MJ5z/fKdKXCNZexRN5tHi8BQaYIC4TnryT9uRv3P+c2+QQnpLgxRKczSBaspEoLuzJLu7ZPj+EelK
        fHUfaEmy/li7M9h/betRU7W40UVfp79OceyPkeY0F493UkB2pCGW0BxPIE6lGK83TfM7VV3/ekiSKzr/
        FQXgtx/7Ab9y6530igJgXFXVt5IQTojIm0VkOqoJKcgg0vv5EYN3tGH/pW1KEB2RrP0txDGxOMIVPnz9
        nb98gezFT5Od/gqiJZeyKgmQ3dwQVhqaEwFdDdNhfAoUSnH/iMF7xiQLeoU+qAjrP0GqU20fJNNSszFA
        /TLpic93AnyWywW7kkN2pIZUaY5Nlxir6tEY478sq+qTaZKsIsJNV3B+2OSjv/Chj6Oq3HT//Rz7/vff
        E5LkN4LIu7hRr97ZTHJrRf8dI/I7m7a/dDNfDNRz91Ht/2gbjiI3yAgFtCGs/g3Z8c+QjH6yuS4RqI8F
        1r/Ro/rpDVwc7JosrDT03jGieEOFpJvtA2j6d1Pt/yhxeG+3LnCD+gBF1p8kO/4Z0tXvA3FTfUCE8vGE
        9T/v0TyXbcGbdqc3ouo3Y9P85sHXv/5rL/zoR8gmnH9Lj/zChz5OjJGiKCir6uYkCb8S0vCr0sih6/by
        nY3IMJK/saT31nG30LT1H4rZIaqlB2mW3gXpcvfj18MIuzll+QLJS/+L7OVvXDLcvKp2rAujv00ZP1K0
        C1PX0wAj0I/kry/pvaUkPXQtW5URTZaoFt9Ns/wAmh+6sJN3vQ8E6lOkp79JevorhOrY1htQoDktjL5T
        UP4wb6Oy6+kLCir6bIzx4SbGh/Mse348HhNCuOSC37YEAOC5hz5GWVUMFwsO/Od9jH7/+U/WR5Nfqx7b
        5Zff8M1BJLuzond/SXZL005gdDs/mtD076Jafh9x7k0TIeluGGE3ylWnSM58l+z0VwjjZzg3gb42HaE5
        FRh9L6N8NEdfSa755zbdBz0lPVzR+7mS7PZ6k6P+lX5UiMWRVozn3wLZMueG2N1y/OYVwtkfkL30JZL1
        n7CpUf9KP9lAdTRh9L2c6vEM1sK5/9Wu9AMgc5H0NdXx6hT/cOXf3fuVFz/8I9ZHI/Is49Yv/OFWzWiL
        z/Dsh4mPJ4Ql/S2t+Bf18wnjH2bUT2TEl8P5lWrZ5osqkCiyGMnuqMhfV5Edbtr1ox2zj4hKj9i7k3rh
        7TTz90G6D0IykUZ8LRbevby0CSVSvkBy5rskr/wVSfkMaMWObKp0vlKfCJQ/zigfzYinLpqbyjb7ILRR
        V/raiuKNFdnhGuntpE5GkIwmP0Kz8Daa+be2EUHIdrAPGqQ6QTj7fdJX/pIwegLRETu2sRVAS6ieTSgf
        zaiezNCXw/kp2k74QqqExUh6R0Vxb0V6qHlC9sV31I8nL5z894NNj/rbF4DvfXTjH/8V8M83jLB5Raie
        SqmeTKmfT9G1gI4F2eyopKACkmmrcLfUpK+pyW9vSJZiO+LvytkSbQ1NUmJ+M83gDTSD16H9v4OmSxCK
        8/NUvZwxbjhcO7cnjpDqFGHtUcLaj0nWf0SoTnQvsAu7qd1SRjwjlE8n1M+m1E+nxFcStBQkbrLHu1eU
        TJFBJDnUkB2pyW6rSQ5EJGMXZ0tt28TsAM3gHmL/dcTB69BsBUKv273ZbB9EiGOoT5Os/7Ttg7UfEsoX
        QOsuPXkXhugANNC8FCif7PrhaIqeDWh1Db5QtP2Q3lyT3V6TvbZuF1pbc3wCeBdwVO7/zDWbzfYFYPLX
        2u1sdF2ojwXqYwl6NlAfD8QznSLGCYsNCimEYSQ9GJFhJFmJZLc0yFB32eAu1/IRDT00XaIpbkfzg2i2
        n1i8Bk3mQTIkJICgqq1BaYnUL5OMn4bqJUL5HMn4aaR+pW0QuU7nEjbsuoG4KtTHA/XxBFYD9YuB5kwX
        oUVaC9vog6Q1tvRgJCxGwmJDdkskzEekuDF9QMjRZIGmuI2Y3wLZMk1xpBVlyUASpBPmtg5hhTRnSMbP
        QHUCKV8kGT+F1KeROLp+fXCxL6wJ1dGE5lRAzybUxwJxVS7hC0CihPlIeiC2g+DBpvWLvp7fOT3fD9sW
        gHSn+412IEUWlHyxIb+rgU6MqWTi4SdW3wOQQCj0/Mbkxote99Ok0hqWVkh1jFC+eO6lNAy6l5MJT9Pz
        BqtVu4evzYWfuZ55BxvtJhDmlXyhaXdJFHQEWsuEEU30gXBOBCSdjj5AG6Q+RVqdBB4BSdDQ75w/XKIP
        WjGWuNaKMnK+H6537sekLywqxVJ3uUsDcSztFbyX8gUBMiUUnA8Ud7Ef0t1ugA1CD+jpRR+4xHem6vi4
        TJxk025/eJPGOw1c1AfSA8FyH9A6t6U+uLgfBEJfL/GBG9MP6XVtBPMYvxrK+8D74SJm464jx3FcABzH
        cQFwHMcFwHEcFwDHcVwAHMd5NVN4tUmX0DEbe1azjQibH0PUdqnzbbfVdN5QPWUCoGiySDN8I+fT0Zwp
        tWikPkGy9uM28/EqxN4dxOI17E1hF8L4WcLoCReAqwpAfojq0D9Ck7k9aixWbDqQnHmEZP3x82m3V6BZ
        eDvVvg9uSixmr60S0pP/ndwFYHOG1SZQb+uguXMdjHpL6bYb/ToLmXzX1FbTudw2hU/lTm+DLa7TeLe6
        ADiO4wLgOI4LgOM4LgCO47gAOI7jAuA4znXEdLqdAtG3l3YUAcIN3qqPamPXcBraas8KQBD43umKb58q
        EdmDySW7gKoyTAMfvKlgKQvX3QkFWI/K/3hhzLFxM9X9qqocKBJ+8VBBPxGzaQ5mBUCAp1Ybvny89HnM
        Thk1sJIJDxzIWbpBNaCrCN9+qeSnq81U5wwqcMcw4YGDBX3DfW56CiDS3iJuPQybJqMOUzDqJtIuTk1z
        v8buGn/rpueDp+PsYVwAHGcP44fuZ5wYlRgjqkoIgRDEF00dF4BZR1UZlxWjUUnTtDfxiECapvR7OVnm
        Xe+4AMwkUZW1tRHjcXm+ujbtTWtlWVHXDXPDHnme7d1GcgBfA5g5VJW11RGj0YXOf4FAxMja+pgm7uE7
        +hwXgFl0/tXVEaNxedXP1nVDVdXeaC4Azl5z/g021gYcFwBnjzl/+0VvOxcAZ286P5Ak3v0uAM4edf7E
        twIdF4C96PwiwqCfewTguADsTecvKIrcG9JxAdiLzt/rF96QjgvAXnV+PwnguAC48zuOC4A7v+MC4Ljz
        Oy4Ajju/4wLguPM7LgCOO7/jAuC48zsuAI47vzN7+GmQPeD8unE1kIiLg+MCsFecv2ki4+4OQI1KSIQs
        TSmKzG8GdlwAZtn5x2XF2tqYpmnO/8saxuOKqqoZDHp+GtDxNYCZdP5xyerq+oXOf7E4rI/PTw0cFwBn
        hpx/bUS8St30sqyoqsY7wgXA2WvOv/EMdeMC4ALg7Dnn3yB6XQAXAG+Cven8AEnw7ncBcPak84sIaZp4
        x7gAOHvN+QF6RU6a+i7wXsctYA86f55n9Ps505oLFBUiTHXhktj9Wd9IdQHYg84/N+wRpnT+nwq8bj5l
        Lg2EKU5WjAo39wKp8YRKF4BdM5CuSq87/6ZRoJcI/+Bwn2hgaA0CeRDTUYALwG4Ysirrazvv/GVZzazz
        n3t/oDfNQ//FfW3cVl0AdoGyrBmNqx11/iZG1tbHM+38s+JUlvBdgJ02XlXGZbXlPPurHemtypq63nrm
        njXnd1wAzAtAs8UU281c5nEtabtT5fx+/NgFYO+IwM46/7UwbSO/+lUkLgB7ARHZ9Dn7rTj/Vs7uT2PY
        L+rnDlwA9ogA5Fm6qc9tZeTP0nRTufs+53dcAG4wRZGT59mOOT9Amibt568wl3bnd7aKbwPuAiEIc8Me
        ayFQluW5rbuN6UG/X1BcQSAuR69o03dH6yVNjKgqIiAS6BUZvV5BMLSHftn2A0wsGWykLLsAOK8WgcBw
        0KNXZDRN66whCaRJuOYRWqQVgTxLqetIjBEJQpokM3O/3zgq3zhRcqqcftdazgLvPpBTGBZdF4BdRKQN
        3Xf62G0IgTyfvTBfgDLC146P+cnZZurPAtw5l/D2fTm9YDd5yQXAmToSaf+mWQCEdqpifcLlq0WOs4cx
        HQGogXPjptoTiN6YLgBWjPVAEfiZhdSzTHeqTRXmUyGfgZ0EZ8YFICq8bTnnvqXM6itMJUJ7Jt/jABeA
        qScLkHuO+Y7jzu8C4MbqOHsA3wVwHBcAx3FcABzHcQFwHMcFwHEcFwDHcWaVKdwGFJAAkuCbfNNMABLs
        H4dxAZgq55fqJOmJL0DIvXemGiGUz4HWLgIuADspAMfJTvwJPvpb0ICNQ7GOC8AOioCf7nGc64PLt+O4
        ADiO4wLgOI4LgOM4LgCO47gAOI7jAuA4jguA4zguAI7juAA4juMC4DiOC4DjOC4AjuO4ADiO4wLgOI4L
        gOM4LgCO40wR5msDOrNH1PZCuDjFt8LpxJ8LgOPsEInArf2EyHRfNaq0z5kYv73OBcCZKqfqJ8LHbxvQ
        6PQLQCIwSMR0FOAC4EwVAswZGlZ9CuA47lRm8V0Ax3EBcBzHBcBxHBcAx3FcABzHcQFwHMcFYHe+7zjO
        tZPe6B/4JjAAGu8L54poXUj9coFOc4b/LiFBROsSGO3krwIngLPb/ZGt9+X3PuoG7WzeXkQRGSQgezhi
        jJFmtUGSXfl1uf8z1/Q9zwR0dh1RaBbe2sTiNc3ezPMTwvhZkpe/7sbgOI7jOI7jOI7jOI7jOI7jOI7j
        OI7jOI7jOI7jOI7jOI7jOI7jOI7jOI7jOI7jOM5V+f9F54+HNTXpZgAAAABJRU5ErkJggg==
</value>
  </data>
</root>